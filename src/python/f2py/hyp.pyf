!    -*- f90 -*-
python module hyp ! in 
    interface  ! in :hyp
        module hypinput ! in :hyp:hypInput.f90
            use precision
            real(kind=realtype) :: epse
            real(kind=realtype) :: epsi
            real(Kind=realtype) :: theta
            real(kind=realtype) :: s0
            real(kind=realtype) :: ps0
            real(kind=realtype) :: pgridratio
            integer(kind=inttype) :: n
            integer(kind=inttype) :: volsmoothiter
            real(kind=realtype) :: slexp
            real(kind=realtype) :: volcoef
            real(kind=realtype) :: volblend
            real(kind=realtype) :: kspreltol
            logical :: writemirror
            logical :: nonlinear
            logical :: writemetrics
            integer(kind=inttype) :: kspmaxits, preconlag, kspsubspacesize
            real(kind=realtype) :: rmin
            real(kind=realtype) :: cmax
            real(kind=realtype) :: eps
            real(kind=realtype) :: farfieldtol
            real(kind=realtype) :: nodetol
        end module hypinput

        module hypdata
          use precision
          integer(kind=inttype) :: nx, nxglobal, nghost
          real(kind=realtype), dimension(:, :), allocatable :: xsurf
          real(kind=realtype), dimension(:, :), allocatable :: xsurfglobal
          integer(kind=inttype), dimension(:, :), allocatable :: lnptr
          integer(kind=inttype), dimension(:, :), allocatable :: gnptr
          integer(kind=inttype), dimension(:, :), allocatable :: cptr
          integer(kind=inttype), dimension(:, :), allocatable :: conn
          integer(kind=inttype), dimension(:), allocatable :: ghost
          integer(kind=inttype) :: npglobal
          integer(kind=inttype), parameter :: nomirror = 0
          integer(kind=inttype), parameter :: xmirror = 1
          integer(kind=inttype), parameter :: ymirror = 2
          integer(kind=inttype), parameter :: zmirror = 3
        end module hypdata

        subroutine releasememory
        end subroutine releasememory

        subroutine setup(filename, mirror)
          character*(*) :: filename
          integer(kind=inttype), intent(in) :: mirror
        end subroutine setup
        
        subroutine setuppanels
        end subroutine setuppanels
 
        subroutine runhyperbolic
        end subroutine runhyperbolic

        subroutine runelliptic
        end subroutine runelliptic

        subroutine surfacesmooth(layer, nsteps, stepsize)
          integer(kind=inttype) :: layer
          integer(kind=inttype) :: nsteps
          real(kind=realtype) :: stepsize
        end subroutine surfacesmooth

        subroutine writecgns(filename) 
            character*(*) :: filename
          end subroutine writecgns

        subroutine zeromirrorplane(filename,mirrorlist,mirrordim,nmirror) ! in :test:writeCGNS_3d.F90
          character*(*) intent(in) :: filename
          integer(kind=inttype) dimension(nmirror,3),intent(in) :: mirrorlist
          integer(kind=inttype) intent(in) :: mirrordim
          integer(kind=inttype), optional,intent(in),check(shape(mirrorlist,0)==nmirror),depend(mirrorlist) :: nmirror=shape(mirrorlist,0)
        end subroutine zeromirrorplane

        subroutine initpetsc(comm)
          integer(kind=intType) :: comm
        end subroutine initpetsc
        
        subroutine writeplot3d(filename) 
            character*(*) :: filename
          end subroutine writeplot3d

        subroutine writelayerplot3d(filename, layer)
          character*(*) :: filename
          integer(kind=inttype) :: layer
        end subroutine writelayerplot3d
        subroutine writelayerfe(filename, layer, partitions)
          character*(*) :: filename
          integer(kind=inttype) :: layer
          logical :: partitions
        end subroutine writelayerfe
     end interface
end python module hyp

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
